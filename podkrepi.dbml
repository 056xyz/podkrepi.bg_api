//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Project "Podkrepi.bg" {
  database_type: 'PostgreSQL'
  Note: ''
}

Table Person {
  id String [pk]
  firstName String [not null]
  lastName String [not null]
  email String [unique, not null]
  emailConfirmed Boolean [default: false]
  phone String
  company String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  newsletter Boolean [default: false]
  address String
  birthday DateTime
  personalNumber String [unique, note: 'Uniform Civil Number (NCN, EGN)
https://en.wikipedia.org/wiki/National_identification_number#Bulgaria']
  vaultId String
  vault Vault
  Document Document [not null]
  Transfer Transfer [not null]
  Campaign Campaign [not null]
  Supporter Supporter [not null]
  Benefactor Benefactor [not null]
  Beneficiary Beneficiary [not null]
  InfoRequest InfoRequest [not null]
  Coordinator Coordinator [not null]
  Subscription Subscription [not null]
  Expense Expense [not null]

  Note: 'Generic person object'
}

Table Company {
  id String [pk]
  companyName String [not null]
  companyNumber String [unique, not null, note: 'BULSTAT Unified Identification Code (UIC)
https://psc.egov.bg/en/psc-starting-a-business-bulstat']
  legalPersonName String
  countryCode String
  cityId String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  Beneficiary Beneficiary [not null]
}

Table Coordinator {
  id String [pk]
  personId String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  person Person [not null]
  Beneficiary Beneficiary [not null]

  Note: 'Coordinator is the person who manages the campaign on behalf of the Beneficiary
Alias: Organizer'
}

Table Benefactor {
  id String [pk]
  personId String [not null]
  customerId String [unique, note: 'Payment provider customer id']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  person Person [not null]

  Note: 'Benefactor is the person who gives money'
}

Table Beneficiary {
  id String [pk]
  type BeneficiaryType [not null]
  personId String [note: 'Person in need when type is `individual`']
  companyId String [note: 'Company in need when type is `company`']
  coordinatorId String [not null, note: 'Coordinator for this beneficiary']
  countryCode String [not null]
  cityId String [not null]
  description String
  publicData Json
  privateData Json
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  coordinatorRelation PersonRelation [not null, default: 'none']
  city City [not null]
  coordinator Coordinator [not null]
  person Person
  company Company
  campaigns Campaign [not null]

  Note: 'Beneficiary is the person who receives the benefit'
}

Table CampaignType {
  id String [pk]
  name String [not null]
  slug String [unique, not null]
  description String
  parentId String
  parent CampaignType
  children CampaignType [not null]
  campaigns Campaign [not null]
}

Table Campaign {
  id String [pk]
  state CampaignState [not null, default: 'draft']
  slug String [unique, not null]
  title String [not null]
  essence String [not null]
  vaultId String
  coordinatorId String [not null]
  beneficiaryId String [not null]
  campaignTypeId String [not null]
  aprovedById String
  description String
  targetAmount Decimal [default: 0]
  reachedAmount Decimal [default: 0]
  currency Currency [default: 'BGN']
  startDate DateTime
  endDate DateTime
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  deletedAt DateTime
  vault Vault
  approvedBy Person
  beneficiary Beneficiary [not null]
  campaignTypes CampaignType [not null]
}

Table InfoRequest {
  id String [pk]
  personId String [not null]
  message String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  deletedAt DateTime
  person Person [not null]
}

Table Supporter {
  id String [pk]
  personId String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  deletedAt DateTime
  comment String
  associationMember Boolean [not null, default: false]
  benefactorCampaign Boolean [not null, default: false]
  benefactorPlatform Boolean [not null, default: false]
  companyOtherText String
  companySponsor Boolean [not null, default: false]
  companyVolunteer Boolean [not null, default: false]
  partnerBussiness Boolean [not null, default: false]
  partnerNpo Boolean [not null, default: false]
  partnerOtherText String
  roleAssociationMember Boolean [not null, default: false]
  roleBenefactor Boolean [not null, default: false]
  roleCompany Boolean [not null, default: false]
  rolePartner Boolean [not null, default: false]
  roleVolunteer Boolean [not null, default: false]
  volunteerBackend Boolean [not null, default: false]
  volunteerDesigner Boolean [not null, default: false]
  volunteerDevOps Boolean [not null, default: false]
  volunteerFinancesAndAccounts Boolean [not null, default: false]
  volunteerFrontend Boolean [not null, default: false]
  volunteerLawyer Boolean [not null, default: false]
  volunteerMarketing Boolean [not null, default: false]
  volunteerProjectManager Boolean [not null, default: false]
  volunteerQa Boolean [not null, default: false]
  volunteerSecurity Boolean [not null, default: false]
  person Person [not null]
}

Table City {
  id String [pk]
  name String [not null]
  postalCode Int [unique, not null]
  countryId String [not null]
  countryCode Country [not null]
  Beneficiary Beneficiary [not null]
}

Table Country {
  id String [pk]
  name String [not null]
  countryCode String [unique, not null]
  City City [not null]
}

Table Vault {
  id String [pk]
  type VaultType [not null]
  amount Decimal [not null, default: 0]
  currency Currency [not null, default: 'BGN']
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  Person Person [not null]
  Expense Expense [not null]
  Campaign Campaign [not null]
  Withdraw Withdrawal [not null]
  Donation Donation [not null]
  Subscription Subscription [not null]
  SourceTransfer Transfer [not null]
  TargetTransfer Transfer [not null]
}

Table Donation {
  id String [pk]
  type DonationType [not null]
  status DonationStatus [not null, default: 'initial']
  provider PaymentProvider [not null, default: 'none']
  targetVaultId String [not null, note: 'Vault where the funds are going']
  customerId String [not null, note: 'Payment provider attributes']
  paymentIntentId String [not null]
  paymentMethodId String [not null]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  targetVault Vault [not null]
}

Table Subscription {
  id String [pk]
  status SubscriptionStatus [not null]
  vaultId String [not null]
  personId String [not null]
  subscriptionId String [not null, note: 'Payment provider Subscription id']
  customerId String [unique]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  sourceVault Vault [not null]
  person Person [not null]

  Note: 'Subscribe to donate on monthly basis'
}

Table Transfer {
  id String [pk]
  type TransferType [not null]
  amount Decimal [not null]
  reason String [not null]
  sourceVaultId String [not null]
  targetVaultId String [not null]
  aprovedById String
  targetDate DateTime [default: `now()`]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  approvedBy Person
  sourceVault Vault [not null]
  targetVault Vault [not null]

  Note: 'Move funds from one vault to another'
}

Table Withdrawal {
  id String [pk]
  status WithdrawStatus [not null]
  currency Currency [not null]
  amount Decimal [not null]
  vaultId String [not null, note: 'Source vault']
  bankAccountId String [not null, note: 'Destination bank account']
  documentId String
  targetDate DateTime [default: `now()`]
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  vault Vault [not null]
  bankAccount BankAccount [not null]

  Note: 'Remove funds from a vault to given bank account'
}

Table BankAccount {
  id String [pk]
  status BankAccountStatus [not null]
  last4 String [not null, note: 'Last 4 digits of IBAN number']
  accountHolderName String [not null, note: 'Name of account holder']
  accountHolderType AccountHolderType [not null]
  bankName String
  fingerprint String
  createdAt DateTime [default: `now()`, not null]
  updatedAt DateTime
  Withdraw Withdrawal [not null]
}

Table Expense {
  id String [pk]
  type ExpenseType [not null]
  description String
  vaultId String [not null]
  documentId String
  aprovedById String
  vault Vault [not null]
  approvedBy Person
  document Document

  Note: 'Pay for something from a given vault'
}

Table Document {
  id String [pk]
  type DocumentType [not null]
  name String [not null]
  filename String [not null]
  filetype String
  description String
  sourceUrl String [not null, note: 'Data storage source url']
  ownerId String [not null, note: 'Person who uploaded the document']
  owner Person [not null]
  Expense Expense [not null]
}

Enum BeneficiaryType {
  individual
  company
}

Enum PersonRelation {
  none
  myself
  myorg
  parent
  spouse
  child
  mother
  father
  brother
  sister
  friend
  relative
  partner
  domesticPartner
  manager
  assistant
  colleague
}

Enum CampaignState {
  initial
  draft
  pending_validation
  approved
  rejected
  active
  active_pending_validation
  suspended
  complete
  disabled
  error
  deleted
}

Enum Currency {
  BGN
  EUR
  USD
}

Enum DonationType {
  donation
}

Enum TransferType {
  withdraw
  relocation
}

Enum ExpenseType {
  none
  internal
  operating
  administrative
  medical
  services
  groceries
  transport
  accommodation
  shipping
  utility
  rental
  legal
  bank
  advertising
  other
}

Enum PaymentProvider {
  none
  stripe
  paypal
  epay
  bank
  cash
}

Enum SubscriptionStatus {
  trialing
  active
  canceled
  incomplete
  incompleteExpired
  pastDue
  unpaid
}

Enum VaultType {
  personal
  campaign
}

Enum DocumentType {
  invoice
  receipt
  medical_record
  other
}

Enum DonationStatus {
  initial
  invalid
  incomplete
  declined
  waiting
  cancelled
  succeeded
  deleted
  refund
  paymentRequested
}

Enum WithdrawStatus {
  initial
  invalid
  incomplete
  declined
  cancelled
  succeeded
}

Enum AccountHolderType {
  individual
  company
}

Enum BankAccountStatus {
  new
  validated
  verified
  verification_failed
  errored
}

Ref: Person.vaultId > Vault.id

Ref: Coordinator.personId > Person.id

Ref: Benefactor.personId > Person.id

Ref: Beneficiary.cityId > City.id

Ref: Beneficiary.coordinatorId > Coordinator.id

Ref: Beneficiary.personId > Person.id

Ref: Beneficiary.companyId > Company.id

Ref: CampaignType.parentId - CampaignType.id

Ref: Campaign.vaultId > Vault.id

Ref: Campaign.aprovedById > Person.id

Ref: Campaign.beneficiaryId > Beneficiary.id

Ref: Campaign.campaignTypeId > CampaignType.id [delete: Cascade]

Ref: InfoRequest.personId > Person.id

Ref: Supporter.personId > Person.id

Ref: City.countryId > Country.id

Ref: Donation.targetVaultId > Vault.id

Ref: Subscription.vaultId > Vault.id

Ref: Subscription.personId > Person.id

Ref: Transfer.aprovedById > Person.id

Ref: Transfer.sourceVaultId > Vault.id

Ref: Transfer.targetVaultId > Vault.id

Ref: Withdrawal.vaultId > Vault.id

Ref: Withdrawal.bankAccountId > BankAccount.id

Ref: Expense.vaultId > Vault.id

Ref: Expense.aprovedById > Person.id

Ref: Expense.documentId > Document.id

Ref: Document.ownerId > Person.id