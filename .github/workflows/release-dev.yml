name: Release development

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'
    branches: [master]
    paths-ignore:
      - '**.md'

jobs:
  build-api-docker-image:
    name: Build API docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: devops-podkrepi-bg
          password: ${{ secrets.DEVOPS_PACKAGES_TOKEN }}

      - name: Get tag
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Get sha
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: echo "VERSION=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v3
        env:
          NODE_ENV: production
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        with:
          push: true
          target: production
          build-args: |
            APP_VERSION=master-${{ env.VERSION }}
          tags: ghcr.io/podkrepi-bg/api:master-${{ env.VERSION }}

  build-migrations-docker-image:
    name: Build migrations docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: devops-podkrepi-bg
          password: ${{ secrets.DEVOPS_PACKAGES_TOKEN }}

      - name: Get tag
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Get sha
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: echo "VERSION=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v3
        env:
          NODE_ENV: production
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        with:
          push: true
          file: Dockerfile.migrations
          build-args: |
            APP_VERSION=${{ env.VERSION }}
          tags: ghcr.io/podkrepi-bg/api/migrations:master-${{ env.VERSION }}

  release-dev:
    name: Release to dev
    runs-on: ubuntu-latest
    needs: [build-api-docker-image, build-migrations-docker-image]
    steps:
      - uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Get tag
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Get sha
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: echo "VERSION=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV

      - name: Set container versions in manifests
        working-directory: manifests/overlays/automation
        run: |
          kustomize edit set image ghcr.io/podkrepi-bg/api=ghcr.io/podkrepi-bg/api:master-$VERSION
          kustomize edit set image ghcr.io/podkrepi-bg/api/migrations=ghcr.io/podkrepi-bg/api/migrations:master-$VERSION

      - name: Set kubeconfig
        run: echo ${{ secrets.K8S_DEV_CONFIG }} | base64 -d > config.yaml

      - name: Apply new manifests
        run: kubectl apply -k manifests/overlays/automation --kubeconfig config.yaml

      - name: Delete kubeconfig
        if: always()
        run: rm config.yaml
